import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram. types import CallbackQuery

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('BOT_TOKEN')
MANAGER_TELEGRAM_ID = 'raszd189'  # Telegram-–Ω–∏–∫–Ω–µ–π–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–±–µ–∑ @)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—Ä–æ—Å —Ñ–æ—Ç–æ"
def create_photo_request_button():
    button = [[InlineKeyboardButton(text="üì∑ –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="request_photo")]]
    return InlineKeyboardMarkup(inline_keyboard=button)

# –ö–Ω–æ–ø–∫–∏ —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
def create_contact_buttons():
    buttons = [
        [InlineKeyboardButton(text="üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="tg://call?phone_number=+79917870066")],
        [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url=f"https://t.me/{MANAGER_TELEGRAM_ID}")] 
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons) 
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø–∏–ª–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: "
        "'–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –∑–∞–∫–∞–∑–∞', '–°–æ—Ä—Ç–∞ –ø–∏–ª–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤' –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=create_photo_request_button()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback(callback_query: CallbackQuery):
    if callback_query.data == "request_photo":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        await callback_query.message.edit_text(
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
            reply_markup=create_contact_buttons()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        user = callback_query.from_user
        user_info = f"[{user.id}](tg://user?id={user.id})"
        await bot.send_message(
            MANAGER_TELEGRAM_ID,
            f"{user_info} —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏.",
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_text(message: types.Message):
    text = message.text.lower()
    
    # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–ø–∏—Å–∞–ª "—Ñ–æ—Ç–æ", "–ø–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ" –∏ —Ç.–¥.
    if any(word in text for word in ["—Ñ–æ—Ç–æ", "–ø–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ", "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ"]):
        await message.answer(
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
            reply_markup=create_contact_buttons()
        )
        return

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (FAQ) ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏
    await message.answer(
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø–∏—à–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: "
        "'–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –∑–∞–∫–∞–∑–∞', '–°–æ—Ä—Ç–∞ –ø–∏–ª–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤' –∏–ª–∏ '–°—Ä–æ—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞'."
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
